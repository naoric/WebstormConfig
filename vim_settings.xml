<application>
  <component name="VimEditorSettings">
    <editor />
  </component>
  <component name="VimHistorySettings">
    <history>
      <history-search>
        <entry>renderarg</entry>
        <entry>custom</entry>
        <entry encoding="base64">XDxjcmVhdGVTdG9yZVw+</entry>
        <entry>store</entry>
        <entry encoding="base64">XDxDb25uZWN0ZWRSb3V0ZXJcPg==</entry>
        <entry>nmap (</entry>
        <entry encoding="base64">XDxSZWNlbnRMb2NhdGlvbnNcPg==</entry>
        <entry encoding="base64">XDxzdHJpY3Q/XD4=</entry>
        <entry encoding="base64">XDxMb2NhdGlvblN0YXRlXD4=</entry>
        <entry encoding="base64">XDxIXD4=</entry>
        <entry encoding="base64">XDxmcm9tXD4=</entry>
        <entry encoding="base64">XDxSb3V0ZUNvbXBvbmVudFByb3BzXD4=</entry>
        <entry>approuteprops</entry>
        <entry encoding="base64">XDxBcHBSb3V0ZVByb3BzXD4=</entry>
        <entry encoding="base64">XDxhbXBsaXR1ZGVVc2VyUHJvcHNcPg==</entry>
        <entry>useselec</entry>
        <entry>propswithchild</entry>
        <entry>act</entry>
        <entry encoding="base64">XDx1c2VyRXZlbnRcPg==</entry>
        <entry>userevent</entry>
      </history-search>
      <history-cmd>
        <entry>actionlist Recent</entry>
        <entry>actionlist recentlocations</entry>
        <entry encoding="base64">bm1hcCAoIDphY3Rpb24gUmVjZW50TG9jYXRpb25zPENSPg==</entry>
        <entry>source ~/.ideavimrc</entry>
        <entry>action CopyReference</entry>
        <entry encoding="base64">IHc=</entry>
        <entry>w</entry>
        <entry encoding="base64">bm1hcCAoIDphY3Rpb24gUmVjZW50TG9jYXRpb25zPENSPiA=</entry>
        <entry>action RecentLocations</entry>
        <entry>action GotoAction</entry>
        <entry>actionlist gotoproject</entry>
        <entry encoding="base64">bm1hcCAoIDphY3Rpb24gR290b1Byb2plY3Q8Q1I+</entry>
        <entry>action GotoProject</entry>
        <entry encoding="base64">bm1hcCAoIDphY3Rpb24gR29Ub1Byb2plY3Q8Q1I+</entry>
        <entry>action SelectNextOccurrence</entry>
        <entry>action AceAction</entry>
        <entry>action GoToProject</entry>
        <entry>action FileStructurePopup</entry>
        <entry>action GotoFile</entry>
        <entry>action GotoDeclaration</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
  </component>
  <component name="VimKeySettings">
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>meta pressed RIGHT</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>meta pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed J</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed K</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>shift meta pressed ENTER</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>meta alt pressed J</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>shift meta pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>meta pressed L</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>alt pressed ENTER</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>shift ctrl pressed J</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>shift meta pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>meta pressed CLOSE_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>meta pressed OPEN_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed ENTER</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>shift pressed TAB</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed M</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
  <component name="VimMarksSettings">
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/development/otonomo/onboarding_new/src/signup/SignupFormActions.tsx" timestamp="1589656090640">
        <mark key="'" line="38" column="28" />
        <mark key="[" line="39" column="27" />
        <mark key="]" line="39" column="29" />
        <mark key="." line="39" column="28" />
        <mark key="^" line="39" column="29" />
      </file>
      <file name="$USER_HOME$/development/otonomo/consumer/tsconfig.json" timestamp="1589407082284">
        <mark key="'" line="17" column="4" />
        <mark key="[" line="8" column="20" />
        <mark key="]" line="10" column="0" />
        <mark key="." line="10" column="0" />
      </file>
      <file name="$USER_HOME$/development/otonomo/consumer/src/components/Initializer/Initializer.tsx" timestamp="1590264954779">
        <mark key="^" line="2" column="75" />
      </file>
      <file name="$USER_HOME$/.ideavimrc" timestamp="1589408669194">
        <mark key="'" line="27" column="15" />
        <mark key="[" line="26" column="34" />
        <mark key="]" line="27" column="34" />
        <mark key="." line="27" column="33" />
        <mark key="^" line="27" column="34" />
      </file>
      <file name="$USER_HOME$/development/otonomo/consumer/src/routes/InitializerRoute.tsx" timestamp="1589409201058">
        <mark key="[" line="34" column="62" />
        <mark key="]" line="34" column="62" />
        <mark key="^" line="34" column="62" />
        <mark key="." line="34" column="61" />
      </file>
      <file name="$USER_HOME$/development/otonomo/consumer/node_modules/@types/history/index.d.ts" timestamp="1589408725991">
        <mark key="'" line="51" column="16" />
      </file>
      <file name="/" timestamp="1590264970655">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/development/otonomo/consumer/src/routes/Simulation/Simulation.tsx" timestamp="1590264923255">
        <mark key="'" line="77" column="35" />
        <mark key="^" line="18" column="73" />
      </file>
      <file name="$USER_HOME$/development/otonomo/consumer/src/components/dashboard/MenuItem.tsx" timestamp="1589408978491">
        <mark key="[" line="9" column="0" />
        <mark key="]" line="9" column="0" />
        <mark key="." line="9" column="0" />
        <mark key="^" line="12" column="43" />
      </file>
      <file name="$USER_HOME$/development/otonomo/consumer/src/index.tsx" timestamp="1589407317838">
        <mark key="[" line="21" column="32" />
        <mark key="]" line="21" column="39" />
        <mark key="^" line="21" column="39" />
        <mark key="." line="21" column="38" />
      </file>
      <file name="$USER_HOME$/development/otonomo/consumer/node_modules/@types/react-router-dom/index.d.ts" timestamp="1589408909161">
        <mark key="'" line="13" column="14" />
        <mark key="[" line="56" column="8" />
        <mark key="]" line="56" column="87" />
      </file>
      <file name="$USER_HOME$/development/otonomo/consumer/src/types/react-aliases.ts" timestamp="1589409116606">
        <mark key="'" line="20" column="12" />
      </file>
      <file name="$USER_HOME$/development/otonomo/consumer/src/test-utils.tsx" timestamp="1589098323123">
        <mark key="'" line="6" column="63" />
        <mark key="[" line="8" column="0" />
        <mark key="]" line="8" column="0" />
        <mark key="^" line="16" column="41" />
        <mark key="." line="8" column="0" />
      </file>
      <file name="$USER_HOME$/development/otonomo/consumer/src/components/Reports/FormErrors.spec.tsx" timestamp="1590346377587">
        <mark key="'" line="53" column="6" />
      </file>
    </filemarks>
    <jumps>
      <jump line="0" column="0" filename="$USER_HOME$/development/otonomo/onboarding_new/src/signup/index.tsx" />
      <jump line="76" column="34" filename="$USER_HOME$/development/otonomo/onboarding_new/src/signup/index.tsx" />
      <jump line="83" column="20" filename="$USER_HOME$/development/otonomo/onboarding_new/src/signup/index.tsx" />
      <jump line="85" column="20" filename="$USER_HOME$/development/otonomo/onboarding_new/src/signup/index.tsx" />
      <jump line="91" column="26" filename="$USER_HOME$/development/otonomo/onboarding_new/src/signup/index.tsx" />
      <jump line="113" column="43" filename="$USER_HOME$/development/otonomo/onboarding_new/src/signup/index.tsx" />
      <jump line="122" column="43" filename="$USER_HOME$/development/otonomo/onboarding_new/src/signup/index.tsx" />
      <jump line="147" column="19" filename="$USER_HOME$/development/otonomo/consumer/src/components/dashboard/services/ServicesBody.tsx" />
      <jump line="63" column="0" filename="$USER_HOME$/development/otonomo/consumer/src/components/dashboard/services/ServicesBody.tsx" />
      <jump line="167" column="15" filename="$USER_HOME$/development/otonomo/consumer/src/components/dashboard/services/ServicesBody.tsx" />
      <jump line="43" column="6" filename="$USER_HOME$/development/otonomo/consumer/src/components/dashboard/services/ServicesBody.tsx" />
      <jump line="28" column="0" filename="$USER_HOME$/development/otonomo/feature-toggle-js/src/index.ts" />
      <jump line="3" column="0" filename="$USER_HOME$/development/otonomo/consumer/server/config/default.ts" />
      <jump line="69" column="0" filename="$USER_HOME$/development/otonomo/consumer/server/config/default.ts" />
      <jump line="1" column="0" filename="$USER_HOME$/development/otonomo/consumer/server/config/default.ts" />
      <jump line="4" column="0" filename="$USER_HOME$/development/otonomo/consumer/server/config/default.ts" />
      <jump line="0" column="0" filename="$USER_HOME$/development/otonomo/consumer/server/config/default.ts" />
      <jump line="63" column="0" filename="$USER_HOME$/development/otonomo/consumer/server/config/default.ts" />
      <jump line="19" column="0" filename="$USER_HOME$/development/otonomo/consumer/server/config/default.ts" />
      <jump line="25" column="0" filename="$USER_HOME$/development/otonomo/consumer/server/config/default.ts" />
      <jump line="89" column="10" filename="$USER_HOME$/development/otonomo/consumer/src/components/dashboard/PersonalComponents/PersonalServicePage.tsx" />
      <jump line="66" column="30" filename="$USER_HOME$/development/otonomo/consumer/src/components/dashboard/PersonalComponents/PersonalServicePage.tsx" />
      <jump line="103" column="14" filename="$USER_HOME$/development/otonomo/consumer/src/components/dashboard/PersonalComponents/PersonalServicePage.tsx" />
      <jump line="8" column="0" filename="$USER_HOME$/development/otonomo/consumer/src/components/Form/Fields/TextField.tsx" />
      <jump line="10" column="25" filename="$USER_HOME$/development/otonomo/consumer/src/components/Form/Fields/TextField.tsx" />
      <jump line="124" column="17" filename="$USER_HOME$/development/otonomo/consumer/src/components/Reports/GenerateReportComponent.tsx" />
      <jump line="95" column="20" filename="$USER_HOME$/development/otonomo/consumer/src/components/Reports/GenerateReportComponent.tsx" />
      <jump line="61" column="0" filename="$USER_HOME$/development/otonomo/consumer/src/components/Reports/GenerateReportComponent.tsx" />
      <jump line="57" column="25" filename="$USER_HOME$/.ideavimrc" />
      <jump line="15" column="33" filename="$USER_HOME$/.ideavimrc" />
      <jump line="38" column="21" filename="$USER_HOME$/.ideavimrc" />
      <jump line="85" column="24" filename="$USER_HOME$/.ideavimrc" />
      <jump line="16" column="21" filename="$USER_HOME$/.ideavimrc" />
      <jump line="12" column="19" filename="$USER_HOME$/.ideavimrc" />
      <jump line="56" column="25" filename="$USER_HOME$/.ideavimrc" />
      <jump line="21" column="0" filename="$USER_HOME$/development/otonomo/consumer/src/test-utils.tsx" />
      <jump line="15" column="2" filename="$USER_HOME$/development/otonomo/consumer/src/test-utils.tsx" />
      <jump line="18" column="12" filename="$USER_HOME$/development/otonomo/consumer/src/test-utils.tsx" />
      <jump line="6" column="13" filename="$USER_HOME$/development/otonomo/consumer/src/lib/test-utils/renderers.tsx" />
      <jump line="17" column="63" filename="$USER_HOME$/development/otonomo/consumer/src/test-utils.tsx" />
      <jump line="13" column="52" filename="$USER_HOME$/development/otonomo/consumer/src/components/Reports/GenerateReportComponent.spec.tsx" />
      <jump line="21" column="33" filename="$USER_HOME$/development/otonomo/consumer/src/components/Reports/GenerateReportComponent.spec.tsx" />
      <jump line="5" column="15" filename="$USER_HOME$/development/otonomo/consumer/src/components/Reports/GenerateReportComponent.spec.tsx" />
      <jump line="59" column="0" filename="$USER_HOME$/development/otonomo/consumer/src/components/Reports/report-schemas.ts" />
      <jump line="4" column="30" filename="$USER_HOME$/development/otonomo/consumer/src/components/Reports/report-schemas.ts" />
      <jump line="36" column="7" filename="$USER_HOME$/development/otonomo/consumer/src/routes/RootRouter.tsx" />
      <jump line="57" column="8" filename="$USER_HOME$/development/otonomo/consumer/src/routes/RootRouter.tsx" />
      <jump line="4" column="9" filename="$USER_HOME$/development/otonomo/consumer/src/routes/RootRouter.tsx" />
      <jump line="3" column="41" filename="$USER_HOME$/development/otonomo/consumer/src/components/Reports/GenerateReportComponent.spec.tsx" />
      <jump line="17" column="4" filename="$USER_HOME$/development/otonomo/consumer/tsconfig.json" />
      <jump line="14" column="13" filename="$USER_HOME$/development/otonomo/consumer/src/components/dashboard/MenuItem.tsx" />
      <jump line="18" column="28" filename="$USER_HOME$/.ideavimrc" />
      <jump line="23" column="2" filename="$USER_HOME$/.ideavimrc" />
      <jump line="24" column="2" filename="$USER_HOME$/.ideavimrc" />
      <jump line="25" column="2" filename="$USER_HOME$/.ideavimrc" />
      <jump line="27" column="15" filename="$USER_HOME$/.ideavimrc" />
      <jump line="51" column="16" filename="$USER_HOME$/development/otonomo/consumer/node_modules/@types/history/index.d.ts" />
      <jump line="56" column="8" filename="$USER_HOME$/development/otonomo/consumer/node_modules/@types/react-router-dom/index.d.ts" />
      <jump line="55" column="40" filename="$USER_HOME$/development/otonomo/consumer/node_modules/@types/react-router-dom/index.d.ts" />
      <jump line="13" column="14" filename="$USER_HOME$/development/otonomo/consumer/node_modules/@types/react-router-dom/index.d.ts" />
      <jump line="14" column="0" filename="$USER_HOME$/development/otonomo/consumer/src/types/react-aliases.ts" />
      <jump line="20" column="12" filename="$USER_HOME$/development/otonomo/consumer/src/types/react-aliases.ts" />
      <jump line="14" column="0" filename="$USER_HOME$/development/otonomo/consumer/src/components/Initializer/Initializer.tsx" />
      <jump line="38" column="28" filename="$USER_HOME$/development/otonomo/onboarding_new/src/signup/SignupFormActions.tsx" />
      <jump line="120" column="0" filename="$USER_HOME$/development/otonomo/consumer/src/components/Reports/GenerateReportComponent.tsx" />
      <jump line="22" column="22" filename="$USER_HOME$/development/otonomo/consumer/src/components/Reports/GenerateReportComponent.tsx" />
      <jump line="77" column="35" filename="$USER_HOME$/development/otonomo/consumer/src/routes/Simulation/Simulation.tsx" />
      <jump line="22" column="0" filename="$USER_HOME$/development/otonomo/consumer/src/components/Reports/FormErrors.spec.tsx" />
      <jump line="54" column="6" filename="$USER_HOME$/development/otonomo/consumer/src/components/Reports/FormErrors.spec.tsx" />
      <jump line="63" column="6" filename="$USER_HOME$/development/otonomo/consumer/src/components/Reports/FormErrors.spec.tsx" />
      <jump line="71" column="6" filename="$USER_HOME$/development/otonomo/consumer/src/components/Reports/FormErrors.spec.tsx" />
      <jump line="5" column="0" filename="$USER_HOME$/development/otonomo/consumer/src/components/Reports/FormErrors.spec.tsx" />
      <jump line="53" column="6" filename="$USER_HOME$/development/otonomo/consumer/src/components/Reports/FormErrors.spec.tsx" />
    </jumps>
  </component>
  <component name="VimRegisterSettings">
    <registers>
      <register name="&quot;" type="4">
        <text>,</text>
      </register>
      <register name="-" type="4">
        <text>,</text>
      </register>
      <register name="/" type="4">
        <text>userevent</text>
      </register>
      <register name="0" type="4">
        <text encoding="base64">SC5Mb2NhdGlvbkRlc2NyaXB0b3I8Uz4gfCAoKGxvY2F0aW9uOiBILkxvY2F0aW9uPFM+KSA9PiBILkxvY2F0aW9uRGVzY3JpcHRvcjxTPik=</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">ICBjaGlsZHJlbjogUmVhY3QuY2hpbGRyZW4K</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">aW1wb3J0ICogYXMgSCBmcm9tICdoaXN0b3J5Jwo=</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">aW1wb3J0ICogYXMgSCBmcm9tICdoaXN0b3J5Jwo=</text>
      </register>
      <register name="4" type="4">
        <text encoding="base64">SC5Mb2NhdGlvbkRlc2NyaXB0b3I8Uz4gfCAoKGxvY2F0aW9uOiBILkxvY2F0aW9uPFM+KSA9PiBILkxvY2F0aW9uRGVzY3JpcHRvcjxTPikpOiB1cmwgaXMgc3RyaW5nIHsKICByZXR1cm4gdHlwZW9mIHVybCA9PT0gJ3N0cmluZycgJiYgVVJMX1BSRUZJWF9SRUdFWC50ZXN0KHVybCkKfQoKY29uc3QgTWVudU5hdkxpbmsgPSBSZWFjdC5mb3J3YXJkUmVmKAogIChwcm9wczogTmF2TGlua1Byb3BzLCByZWY6IFJlYWN0LlJlZjxIVE1MQW5jaG9yRWxlbWVudD4pID0+CiAgICBpc0V4dGVybmFsTGluayhwcm9wcy50bykgPyAoCiAgICAgIDxhCiAgICAgICAgcmVmPXtyZWZ9CiAgICAgICAgaHJlZj17cHJvcHMudG99CiAgICAgICAgY2xhc3NOYW1lPXtwcm9wcy5jbGFzc05hbWV9CiAgICAgICAgdGFyZ2V0PXtwcm9wcy50by5zdGFydHNXaXRoKCdtYWlsdG86JykgPyAnX3NlbGYnIDogJ19ibGFuayd9CiAgICAgICAgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj4KICAgICAgICB7cHJvcHMuY2hpbGRyZW59CiAgICAgIDwvYT4KICAgICkgOiAoCiAgICAgIDxOYXZMaW5rIGlubmVyUmVmPXtyZWZ9IHsuLi5wcm9wc30gLz4KICAgICkKKQoKZXhwb3J0IGludGVyZmFjZSBNZW51SXRlbSB7CiAgdGl0bGU6IHN0cmluZwogIHJvdXRlUGF0aDogc3RyaW5nCiAgaWNvbjogUmVhY3QuUmVhY3RFbGVtZW50Cn0KCmludGVyZmFjZSBNZW51SXRlbVByb3BzIHsKICBpdGVtOiBNZW51SXRlbQp9Cgo=</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">aW1wb3J0IHsgTG9jYXRpb25EZXNjcmlwdG9yIH0gZnJvbSAnaGlzdG9yeScK</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">aW1wb3J0IHsgUm9vdFN0YXRlIH0gZnJvbSAndHlwZXMvc3RvcmUvcm9vdC50eXBlJwo=</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">ICBzdG9yZT86IFJvb3RTdGF0ZQo=</text>
      </register>
      <register name="8" type="4">
        <text>{
    route: '/services/something/something',
    reports: {
      points: {
        records_limit: {
          description: 'Maximum number of points in a single report',
          value: 10000,
          enabled: true,
        },
        report_days_range: {
          description: 'Maximum days between start and end time of report',
          value: 7,
          enabled: true,
        },
      },
    },
  }</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64"></text>
      </register>
      <register name=":" type="4">
        <text>action GotoDeclaration</text>
      </register>
    </registers>
  </component>
  <component name="VimSearchSettings">
    <search>
      <last-search>userevent</last-search>
      <last-offset />
      <last-pattern>userevent</last-pattern>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
  </component>
  <component name="VimSettings">
    <state version="6" enabled="true" />
    <notifications>
      <idea-join enabled="true" />
      <idea-put enabled="false" />
    </notifications>
  </component>
</application>